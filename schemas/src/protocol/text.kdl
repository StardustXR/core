version (u32)1

interface "/drawable" {
	description ""

	signal "create_text" side="server" {
		description "Create a text node"

		argument "name" type="string"
		argument "parent" type="node" aspect="spatial"
		argument "transform" type="struct" struct="transform"
		argument "text" type="string"
		argument "style" type="struct" struct="TextStyle"
		return type="node" node="Text" parent="/drawable/text" name_argument="name"
	}
}

enum "XAlign" {
	description "X alignment"

	variant "Left"
	variant "Center"
	variant "Right"
}
enum "YAlign" {
	description "Y alignment"

	variant "Top"
	variant "Center"
	variant "Bottom"
}
enum "TextFit" {
	description "How the text fits in a box of any size"

	variant "Wrap"
	variant "Clip"
	variant "Squeeze"
	variant "Exact"
	variant "Overflow"
}
struct "TextBounds" {
	description ""

	field "bounds" type="vec2"
	field "fit" type="enum" enum="TextFit"
	field "anchor_align_x" type="enum" enum="XAlign"
	field "anchor_align_y" type="enum" enum="YAlign"
}
struct "TextStyle" {
	description ""

	field "character_height" type="float"
	field "color" type="color"
	field "font" type="resource" optional=true
	field "text_align_x" type="enum" enum="XAlign"
	field "text_align_y" type="enum" enum="YAlign"
	field "bounds" type="struct" struct="TextBounds" optional=true
}
node "Text" {
	description "Text rendered to work best in XR"

	aspect "Node"
	aspect "Spatial"
	aspect "Text"
}
aspect "Text" {
	description "Text rendered to work best in XR"

	signal "set_character_height" side="server" {
		description "Set the character height in meters"

		argument "height" type="float"
	}
	signal "set_text" side="server" {
		description "Set the text content"

		argument "text" type="string"
	}
}
